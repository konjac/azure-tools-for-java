plugins {
    id "org.jetbrains.intellij" version "0.4.5"
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
    id "de.undercouch.download" version "4.0.1"
}

import com.microsoft.azuretools.plugins.BundleBuildIDEAPlugin
import org.apache.tools.ant.filters.*

processResources {
    filesMatching('**/ApplicationInsights.xml') {
        filter(ReplaceTokens, tokens: ["applicationinsights.key": project.property("applicationinsights.key")])
    }
}

group 'com.microsoft.azuretools'

compileJava {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

compileKotlin {
    kotlinOptions.jvmTarget = javaVersion
}
compileTestKotlin {
    kotlinOptions.jvmTarget = javaVersion
}

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

apply plugin: 'checkstyle'
apply plugin: 'findbugs'

checkstyle {
    toolVersion = '8.30'
    configFile = new File('config/checkstyle/checkstyle.xml')
    showViolations = false
}

findbugs {
    toolVersion = "3.0.1"
    ignoreFailures = true
}

intellij {
    pluginName = 'azure-toolkit-for-intellij'
    version = intellij_version
    updateSinceUntilBuild = Boolean.valueOf(updateVersionRange)
    plugins = ['java', 'maven', dep_plugins, "properties"]
	downloadSources = Boolean.valueOf(sources)
}

sourceSets {
    main {
        java.srcDirs 'src'
        kotlin.srcDirs 'src'
        resources {
            srcDir 'resources'
            exclude 'bundle/**'
        }
    }
    test {
        java {
            srcDir 'Test/java'
        }
        kotlin.srcDirs 'Test/java'
        resources {
            srcDir 'Test/resources'
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    compile.exclude module:'slf4j-api'
    compile.exclude module:'log4j'
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

apply plugin: 'java'

dependencies {
    compile fileTree(dir: '../AddLibrary/AzureLibraries/com.microsoft.azuretools.sdk/dependencies', include: ['applicationinsights-management-1.0.3.jar'])
    compile 'com.microsoft.sqlserver:mssql-jdbc:6.1.0.jre8'
    compile 'commons-io:commons-io:2.5'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile 'net.minidev:json-smart:2.3'
    compile 'com.microsoft.azure:azure-client-runtime:1.6.13', { force = true }
    compile 'com.microsoft.azure:azure-client-authentication:1.6.13', { force = true }
    compile 'com.microsoft.azuretools:azuretools-core:3.36.0', {
        exclude group: "com.microsoft.azure", module: "azure-client-authentication"
        exclude group: "com.microsoft.azure", module: "azure-client-runtime"
        exclude group: "javax.xml.bind", module: "jaxb-api"
    }
    compile 'com.microsoft.azuretools:azure-explorer-common:3.36.0', {
        exclude group: "com.microsoft.azure", module: "azure-client-authentication"
        exclude group: "com.microsoft.azure", module: "azure-client-runtime"
        exclude group: "javax.xml.bind", module: "jaxb-api"
    }
    compile 'com.microsoft.azuretools:hdinsight-node-common:3.36.0', {
        exclude group: "com.microsoft.azure", module: "azure-client-authentication"
        exclude group: "com.microsoft.azure", module: "azure-client-runtime"
        exclude group: "javax.xml.bind", module: "jaxb-api"
    }
    compile 'com.microsoft.azure:azure-tools-common:0.2.0'
    compile group: 'com.microsoft.azure.appplatform.v2019_05_01_preview', name: 'azure-mgmt-appplatform', version: '1.0.0-beta-2'
    compile 'com.spotify:docker-client:8.11.7'

    compile group: 'org.dom4j', name: 'dom4j', version: '2.1.1'
    compile group: 'jaxen', name: 'jaxen', version: '1.2.0'

    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'

    testCompile 'junit:junit:4.12'
    testCompile 'info.cukes:cucumber-junit:1.2.5'
    testCompile 'info.cukes:cucumber-java:1.2.5'
    testCompile 'org.mockito:mockito-core:2.7.22'
    testCompile 'org.assertj:assertj-swing-junit:3.5.0'

    testCompile 'com.github.tomakehurst:wiremock:2.8.0'
    testCompile 'org.powermock:powermock-module-junit4:1.7.0RC4'
    testCompile 'org.powermock:powermock-api-mockito2:1.7.0RC4'
    testCompile 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile "org.jetbrains.kotlin:kotlin-stdlib"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
}

test {
    testLogging.showStandardStreams = true
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task cucumberPackJar(type: Jar) {
    appendix = 'pathing'

    doFirst {
        manifest {
            attributes "Class-Path": configurations.cucumberRuntime.files.collect {
                it.toURI().toString().replaceFirst(/file:\/+/, '/')
            }.join(' ')
        }
    }
}

buildSearchableOptions.onlyIf {false}

task cucumber() {
    dependsOn compileTestJava, cucumberPackJar
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = files(sourceSets.main.output, sourceSets.test.output, cucumberPackJar.archivePath)
            args = [
                '--plugin', 'progress',
                '--glue', 'com.microsoft.azure.hdinsight.spark.common',
                '-m',
                'Test/resources']
        }
    }
}

test.dependsOn cucumber
// buildPlugin.dependsOn test

defaultTasks 'buildPlugin'

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

apply plugin: BundleBuildIDEAPlugin

installIdea.dependsOn buildPlugin
installIdea.dependsOn checkstyleMain

patchPluginXml {
    sinceBuild = patchPluginXmlSinceBuild
}
